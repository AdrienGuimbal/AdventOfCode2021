let input = [1;3;1;5;5;1;1;1;5;1;1;1;3;1;1;4;3;1;1;2;2;4;2;1;3;3;2;4;4;4;1;3;1;1;4;3;1;5;5;1;1;3;4;2;1;5;3;4;5;5;2;5;5;1;5;5;2;1;5;1;1;2;1;1;1;4;4;1;3;3;1;5;4;4;3;4;3;3;1;1;3;4;1;5;5;2;5;2;2;4;1;2;5;2;1;2;5;4;1;1;1;1;1;4;1;1;3;1;5;2;5;1;3;1;5;3;3;2;2;1;5;1;1;1;2;1;1;2;1;1;2;1;5;3;5;2;5;2;2;2;1;1;1;5;5;2;2;1;1;3;4;1;1;3;1;3;5;1;4;1;4;1;3;1;4;1;1;1;1;2;1;4;5;4;5;5;2;1;3;1;4;2;5;1;1;3;5;2;1;2;2;5;1;2;2;4;5;2;1;1;1;1;2;2;3;1;5;5;5;3;2;4;2;4;1;5;3;1;4;4;2;4;2;2;4;4;4;4;1;3;4;3;2;1;3;5;3;1;5;5;4;1;5;1;2;4;2;5;4;1;3;3;1;4;1;3;3;3;1;3;1;1;1;1;4;1;2;3;1;3;3;5;2;3;1;1;1;5;5;4;1;2;3;1;3;1;1;4;1;3;2;2;1;1;1;3;4;3;1;3];;

let rec simu pop i =
	if i=0 then List.length pop else begin
	let rec reprod p acc =
		match p with
		| [] -> acc
		| 0::t -> reprod t (6::8::acc) 
		| n::t -> reprod t ((n-1)::acc)
	in 
	simu (reprod pop []) (i-1)
	end
;;

let () =
	Printf.printf "Res : %d\n" (simu input 80);
	Printf.printf "Res : %d\n" (simu input 256)
;;